<Activity mc:Ignorable="sap sap2010" x:Class="SAP_Logon750_LoginModule" this:SAP_Logon750_LoginModule.ArgInTmeSpanDelayShort="00:00:02" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ArgStrSapAppName" Type="InArgument(x:String)" />
    <x:Property Name="ArgStrBotEnvironment" Type="InArgument(x:String)" />
    <x:Property Name="ArgInTmeSpanDelayShort" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="ArgInSAPUserName" Type="InArgument(x:String)" />
    <x:Property Name="ArgInSAPPassword" Type="InArgument(x:String)" />
    <x:Property Name="ArgInConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="ArgInLogNotifications" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1104,1151.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SAP_Logon750_LoginModule_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Core.Activities.SAP</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Try Catch Flow" sap:VirtualizedContainerService.HintSize="753.6,1086.4" sap2010:WorkflowViewState.IdRef="Flowchart_4">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="vIntRetryCount" />
      <Variable x:TypeArguments="x:String" Name="vStrExceptionMessage" />
      <Variable x:TypeArguments="ss:SecureString" Name="str_passwordSAP" />
      <Variable x:TypeArguments="x:String" Name="str_userIDSAP" />
      <Variable x:TypeArguments="x:Boolean" Name="vBoolInValidCredsExists" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,114.5</av:PointCollection>
        <x:Double x:Key="Width">720</x:Double>
        <x:Double x:Key="Height">1050</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID13</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,444.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,497.3 300,527.3 300.2,527.3 300.2,586.666666666667</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="850.4,976" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Flowchart sap2010:Annotation.AnnotationText="Description: Launching SAP 750 Logon Application and Logging Into SAP&#xA;&#xA;Technical Details: Launches SAP Application and logs in by providing credentials. Retries for 3 times if Login doesn't successfully happen.&#xA;&#xA;Dev details: &#xA;Created By Sharath Uday on 6th Feb 2020" DisplayName="SAP_Logon750_LoginModule" sap:VirtualizedContainerService.HintSize="813.6,744.8" sap2010:WorkflowViewState.IdRef="Flowchart_3">
            <Flowchart.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="vBoolRunWinExists" />
              <Variable x:TypeArguments="x:TimeSpan" Default="00:00:02" Name="vDateTimeDelayShort" />
              <Variable x:TypeArguments="x:Boolean" Name="vBoolSAPWinExists" />
              <Variable x:TypeArguments="x:Int32" Name="vIntLoginPageLoadCount" />
              <Variable x:TypeArguments="x:Boolean" Name="vBoolSAPLoginPageExists" />
              <Variable x:TypeArguments="x:Boolean" Name="vBoolSAPLoginSuccess" />
              <Variable x:TypeArguments="x:Int32" Name="vLoginModuleRetryCount" />
            </Flowchart.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">380,2.66666666666666</av:Point>
                <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                <x:Double x:Key="Width">780</x:Double>
                <av:PointCollection x:Key="ConnectorLocation">410,77.3333333333333 410,115.333333333333</av:PointCollection>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID3</x:Reference>
            </Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID0">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">580,485.333333333333</av:Point>
                  <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Check for Successful Login to SAP" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'SAP' Landing Page" sap:VirtualizedContainerService.HintSize="433.6,440" sap2010:WorkflowViewState.IdRef="WindowScope_12" InformativeScreenshot="a1eccf1f0c452c47f975a99a63f8027b" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' title='SAP*' /&gt;">
                  <ui:WindowScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,292.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:UiElementExists DisplayName="Element Exists 'Dolby' image on Landing Page" Exists="[vBoolSAPLoginSuccess]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_12">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="27362923-b036-4618-8f4f-8e19c18908ec" InformativeScreenshot="77bcf183a9224daf8f1bb8ef59d8da84" Selector="&lt;sap id='usr/cntlIMAGE_CONTAINER/shellcont/shell/shellcont[1]/shell' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:UiElementExists.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:UiElementExists>
                        <If Condition="[vBoolSAPLoginSuccess]" DisplayName="If SAP Login Successful" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="15 Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="LogandReport\LogFile.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-BD16</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                                <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                                <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                                <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                                <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="241.6,300.8" sap2010:WorkflowViewState.IdRef="Sequence_62">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="14 Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="LogandReport\LogFile.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-BD14</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                                  <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                                  <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                                  <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                                  <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[ArgInConfig(&quot;Generic_ExceptionBody&quot;).ToString.Replace(&quot;ExceptionMessage&quot;,&quot;Unable to load SAP Home page. Session time out occured...&quot;)]" Cc="[ArgInConfig(&quot;SupportMailRecipients&quot;).ToString]" DisplayName="15 Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[ArgInConfig(&quot;Generic_ExceptionSubject&quot;).ToString]" To="[ArgInConfig(&quot;BusinessMailRecipients&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                              <Throw DisplayName="Throw- Home" Exception="[new BusinessRuleException(&quot;Unable to load SAP Home page. Session time out occured...&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_4" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:WindowScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WindowScope>
              </Sequence>
            </FlowStep>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">580,365.333333333333</av:Point>
                  <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">680,434.133333333333 680,485.333333333333</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Logging into SAP by entering Credentials" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assigning Count for Checking Page Loading" sap:VirtualizedContainerService.HintSize="977.6,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[vIntLoginPageLoadCount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <While DisplayName="While SAP Login Page has not Loaded" sap:VirtualizedContainerService.HintSize="977.6,521.6" sap2010:WorkflowViewState.IdRef="While_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <While.Condition>[vIntLoginPageLoadCount&lt;3 and vBoolSAPLoginPageExists = False]</While.Condition>
                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,362.4" sap2010:WorkflowViewState.IdRef="Sequence_51">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Delay_65" />
                    <ui:UiElementExists DisplayName="Element Exists SAP Login Page" Exists="[vBoolSAPLoginPageExists]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_21">
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e4f90323-9525-4234-b7fa-c846f88bd226" InformativeScreenshot="bc0b6d68f4932658bc532cd01b04299e" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' title='SAP' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:UiElementExists.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:UiElementExists>
                    <Assign DisplayName="Assigning Count for Checking Page Loading" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[vIntLoginPageLoadCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[vIntLoginPageLoadCount+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </While>
                <If Condition="[vBoolSAPLoginPageExists]" DisplayName="If LoginPage has loaded" sap:VirtualizedContainerService.HintSize="977.6,3172" sap2010:WorkflowViewState.IdRef="If_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="600,3012.8" sap2010:WorkflowViewState.IdRef="Sequence_54">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="vBoolMultipleLoginPopUp" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window SAP Login Page" sap:VirtualizedContainerService.HintSize="558.4,2149.6" sap2010:WorkflowViewState.IdRef="WindowScope_18" InformativeScreenshot="206560014dbff0802b6f63a68ad3a338" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' title='SAP' /&gt;">
                        <ui:WindowScope.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="524.8,2002.4" sap2010:WorkflowViewState.IdRef="Sequence_52">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MaximizeWindow Window="{x:Null}" ContinueOnError="True" DisplayName="Maximize SAP Login Window" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="MaximizeWindow_11" />
                              <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[ArgInConfig(&quot;SAP_UserCred&quot;).ToString]" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="483.2,80.8" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[str_passwordSAP]" Username="[str_userIDSAP]" />
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'User Name' Text Field" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="Click_37" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6fbabc7d-9e41-4c15-9a2b-70700e8baf6e" InformativeScreenshot="303ef7c53a377e7d12dfe9c3a6c552f3" Selector="&lt;sap id='usr/txtRSYST-BNAME' /&gt;" WaitForReady="COMPLETE">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                  </ui:Target>
                                </ui:Click.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:Click>
                              <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_66" />
                              <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" DisplayName="Type Into 'User Name' Text Field" EmptyField="True" sap:VirtualizedContainerService.HintSize="483.2,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_15" Text="[str_userIDSAP]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bceae88e-b4f4-4496-8924-4fcf01d353f7" InformativeScreenshot="7cf651e51565b596cfd084118208dc5b" Selector="&lt;sap id='usr/txtRSYST-BNAME' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:TypeInto>
                              <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_67" />
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'PasswordField'" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="Click_38" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="aa561c84-0d01-4396-bc61-ca8f7bd74ccb" InformativeScreenshot="5bbfe0548ad84b106df5b59c3363a5cd" Selector="&lt;sap id='usr/pwdRSYST-BCODE' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:Click>
                              <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_68" />
                              <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" DisplayName="Type Password Into 'PasswordField'" EmptyField="True" sap:VirtualizedContainerService.HintSize="483.2,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_16" Text="[new System.Net.NetworkCredential(&quot;&quot;,str_passwordSAP.ToString).Password]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="490c6be9-5254-4e1c-a806-8671f1a38083" InformativeScreenshot="5bbfe0548ad84b106df5b59c3363a5cd" Selector="&lt;sap id='usr/pwdRSYST-BCODE' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:TypeInto>
                              <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_69" />
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'Enter'" sap:VirtualizedContainerService.HintSize="483.2,52.8" sap2010:WorkflowViewState.IdRef="SendHotkey_18" Key="enter" KeyModifiers="None" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c16531d0-20e4-45d3-a0c9-a4b2ecafdcef" InformativeScreenshot="7a043568ddc8963b72ba34728e8b5eb5" Selector="&lt;sap id='usr' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendHotkey>
                              <ui:UiElementExists DisplayName="Element Exists Invalid Creds" Exists="[vBoolInValidCredsExists]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_28">
                                <ui:UiElementExists.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7c4796c-3b4b-470f-9745-dc05779fb177" InformativeScreenshot="d5384ccb354409709b1cfff400276303" Selector="&lt;wnd aaname='Name or password is incorrect*' cls='*' /&gt;" TimeoutMS="10000">
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:UiElementExists.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:UiElementExists>
                              <If Condition="[vBoolInValidCredsExists]" DisplayName="If Invalid Credentials" sap:VirtualizedContainerService.HintSize="483.2,529.6" sap2010:WorkflowViewState.IdRef="If_27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,340.8" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[&quot;SAP Invalid Credentials&quot;]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:LogMessage>
                                    <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[ArgInConfig(&quot;Generic_ExceptionBody&quot;).ToString.Replace(&quot;ExceptionMessage&quot;,&quot;SAP login failed due to invalid credentials, Please check.&quot;)]" Cc="[ArgInConfig(&quot;SupportMailRecipients&quot;).ToString]" DisplayName="18 Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="SendOutlookMail_10" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[ArgInConfig(&quot;Generic_ExceptionSubject&quot;).ToString]" To="[ArgInConfig(&quot;BusinessMailRecipients&quot;).ToString]">
                                      <ui:SendOutlookMail.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                      </ui:SendOutlookMail.Files>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:SendOutlookMail>
                                    <Throw DisplayName="Throw- Inavlid Creds" Exception="[new BusinessRuleException(&quot;SAP Login Failed: Invalid Credentials&quot;)]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Throw_8" />
                                  </Sequence>
                                </If.Then>
                              </If>
                              <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_70" />
                            </Sequence>
                          </ActivityAction>
                        </ui:WindowScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WindowScope>
                      <ui:UiElementExists DisplayName="Element Exists 'saplogon.exe License'" Exists="[vBoolMultipleLoginPopUp]" sap:VirtualizedContainerService.HintSize="558.4,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_22">
                        <ui:UiElementExists.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3e580e6f-8a85-4183-bd10-e7a5bbb29846" InformativeScreenshot="345a5577a914979f4199af33d0c9cd43" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='License Information for Multiple Logons' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:UiElementExists.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:UiElementExists>
                      <If Condition="[vBoolMultipleLoginPopUp]" sap:VirtualizedContainerService.HintSize="558.4,583.2" sap2010:WorkflowViewState.IdRef="If_21">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,394.4" sap2010:WorkflowViewState.IdRef="Sequence_53">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'RadioButton Continue'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_39" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2917df1b-3091-4543-a249-0eafea71b29f" InformativeScreenshot="f2a1ae2224182fc2d131b426a34420d9" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='License Information for Multiple Logons' /&gt;&lt;sap id='usr/radMULTI_LOGON_OPT1' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'UserArea  usr'" sap:VirtualizedContainerService.HintSize="333.6,154.4" sap2010:WorkflowViewState.IdRef="SendHotkey_19" Key="enter" KeyModifiers="None" SpecialKey="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1e3663a3-48cf-4cd5-8f65-be4fb7fe954e" InformativeScreenshot="8cc075d63d768d857a871bd3191501e6" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='License Information for Multiple Logons' /&gt;&lt;sap id='usr' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="13 Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="LogandReport\LogFile.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-BD13</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                        <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                        <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                        <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </If.Else>
                </If>
              </Sequence>
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">310,115.333333333333</av:Point>
                  <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">410,184.133333333333 410,276.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Launching SAP750 GUI Application from RUN window" sap:VirtualizedContainerService.HintSize="1196.8,3196" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Default="True" Name="VBoolSAPFileExists" />
                  <Variable x:TypeArguments="x:Boolean" Name="bool_MultipleLogon" />
                  <Variable x:TypeArguments="x:Boolean" Name="bool_SAPBackendMessagePopUp" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:PathExists DisplayName="Path Exists-SAP File" Exists="[VBoolSAPFileExists]" sap:VirtualizedContainerService.HintSize="1155.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[ArgInConfig(&quot;SAP_LaunchPath&quot;).ToString]" PathType="File">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:PathExists>
                <If Condition="[VBoolSAPFileExists]" DisplayName="If SAP File present" sap:VirtualizedContainerService.HintSize="1155.2,472.8" sap2010:WorkflowViewState.IdRef="If_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,313.6" sap2010:WorkflowViewState.IdRef="Sequence_57">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;Execute SAP file&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process- SAP" FileName="[ArgInConfig(&quot;SAP_LaunchPath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="StartProcess_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:StartProcess>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="241.6,300.8" sap2010:WorkflowViewState.IdRef="Sequence_58">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="11 Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="LogandReport\LogFile.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-BD11</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                          <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                          <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[ArgInConfig(&quot;Generic_ExceptionBody&quot;).ToString.Replace(&quot;ExceptionMessage&quot;,&quot;SAP executable file is missing at &quot;+ArgInConfig(&quot;SAP_LaunchPath&quot;).ToString+&quot;. Please check.&quot;)]" Cc="[ArgInConfig(&quot;SupportMailRecipients&quot;).ToString]" DisplayName="16 Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[ArgInConfig(&quot;Generic_ExceptionSubject&quot;).ToString]" To="[ArgInConfig(&quot;BusinessMailRecipients&quot;).ToString]">
                        <ui:SendOutlookMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                        </ui:SendOutlookMail.Files>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SendOutlookMail>
                      <Throw DisplayName="Throw- SAP Failed" Exception="[new BusinessRuleException(&quot;SAP Login Failed. Executable file not found&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </Sequence>
                  </If.Else>
                </If>
                <ui:UiElementExists DisplayName="Element Exists SAP Connection Window 'saplogon.exe'" Exists="[vBoolSAPWinExists]" sap:VirtualizedContainerService.HintSize="1155.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_25">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0a371334-75fc-48f4-93fa-ef69f869ad12" InformativeScreenshot="1bad93675891a4de38135d1f16cfd903" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='SAP Logon 750' /&gt;" TimeoutMS="120000" WaitForReady="COMPLETE" />
                  </ui:UiElementExists.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:UiElementExists>
                <If Condition="[vBoolSAPWinExists]" DisplayName="If SAP Connection Window has loaded" sap:VirtualizedContainerService.HintSize="1155.2,1496.8" sap2010:WorkflowViewState.IdRef="If_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attaching SAP Connection Window 'saplogon.exe'" sap:VirtualizedContainerService.HintSize="869.6,1337.6" sap2010:WorkflowViewState.IdRef="WindowScope_19" InformativeScreenshot="d7a6fed13e7d663577681e33159897c7" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='SAP Logon 750' /&gt;">
                      <ui:WindowScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="836,1190.4" sap2010:WorkflowViewState.IdRef="Sequence_69">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MaximizeWindow Window="{x:Null}" ContinueOnError="True" DisplayName="Maximize SAP Window" sap:VirtualizedContainerService.HintSize="794.4,22.4" sap2010:WorkflowViewState.IdRef="MaximizeWindow_12" />
                            <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="794.4,22.4" sap2010:WorkflowViewState.IdRef="Delay_71" />
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clicking on  Connections in SAPTreeList" sap:VirtualizedContainerService.HintSize="794.4,107.2" sap2010:WorkflowViewState.IdRef="Click_40" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target Element="{x:Null}" Id="81ac9763-0318-404c-9678-334e08053e39" InformativeScreenshot="bc96ba156c34af31c2e9f1fa2802010e" Selector="&lt;wnd ctrlid='100' title='SAP&amp;apos;s Advanced Treelist' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.ClippingRegion>
                                    <ui:Region Rectangle="19, 50, 86, 20" />
                                  </ui:Target.ClippingRegion>
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:Click>
                            <If Condition="[ArgInConfig(&quot;BotEnvironment&quot;).ToString.ToLower=&quot;prod&quot;]" DisplayName="If Prod" sap:VirtualizedContainerService.HintSize="794.4,763.2" sap2010:WorkflowViewState.IdRef="If_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Prod Sequence" sap:VirtualizedContainerService.HintSize="375.2,604" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click on Production SAP" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_43" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="False">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target Element="{x:Null}" Id="2067b42b-fe9f-40c2-a25d-39e28c343238" InformativeScreenshot="d387b2ed899c8d18548353f3657b4fc3" Selector="&lt;wnd ctrlid='100' title='SAP&amp;apos;s Advanced Treelist' /&gt;" WaitForReady="COMPLETE">
                                        <ui:Target.ClippingRegion>
                                          <ui:Region Rectangle="75, 95, 47, 55" />
                                        </ui:Target.ClippingRegion>
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                      </ui:Target>
                                    </ui:Click.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:Click>
                                  <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Delay_75" />
                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_DOUBLE" DisplayName="Clicking on ECP from 'list item'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_45" KeyModifiers="None" MouseButton="BTN_LEFT">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ce148980-f70c-4e11-93fa-5fc0945dc000" InformativeScreenshot="c9681105e95d7c30800965c048e63471" Selector="&lt;wnd omit:ctrlid='5003' title='myContainer' /&gt;&lt;wnd omit:ctrlid='1008' /&gt;&lt;ctrl name='ECP [ERP Production]' role='list item' /&gt;" WaitForReady="COMPLETE">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                      </ui:Target>
                                    </ui:Click.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:Click>
                                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey Enter to 'list item' ECP" sap:VirtualizedContainerService.HintSize="333.6,154.4" sap2010:WorkflowViewState.IdRef="SendHotkey_20" Key="enter" KeyModifiers="None" SpecialKey="True">
                                    <ui:SendHotkey.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="60d99744-dacd-4d45-858a-da7fea84b083" InformativeScreenshot="c9681105e95d7c30800965c048e63471" Selector="&lt;wnd omit:ctrlid='5003' title='myContainer' /&gt;&lt;wnd omit:ctrlid='1008' /&gt;&lt;ctrl name='ECP [ERP Production]' role='list item' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:SendHotkey.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendHotkey>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="QA Sequence" sap:VirtualizedContainerService.HintSize="375.2,604" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Quality" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_46" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target Element="{x:Null}" Id="ec40bb4b-daae-493d-90a9-2684e96c7ef0" InformativeScreenshot="e8ece938618d2739da83a62515a03280" Selector="&lt;wnd ctrlid='100' title='SAP&amp;apos;s Advanced Treelist' /&gt;" WaitForReady="COMPLETE">
                                        <ui:Target.ClippingRegion>
                                          <ui:Region Rectangle="50, 98, 52, 19" />
                                        </ui:Target.ClippingRegion>
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                      </ui:Target>
                                    </ui:Click.Target>
                                  </ui:Click>
                                  <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Delay_73" />
                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_DOUBLE" DisplayName="Clicking on ECQ from 'list item'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_42" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="88723435-7650-4725-a07e-f40f1649d8f4" InformativeScreenshot="67e90802b2470e71e5cf9adb26512473" Selector="&lt;wnd omit:ctrlid='5003' title='myContainer' /&gt;&lt;wnd omit:ctrlid='1008' /&gt;&lt;ctrl name='*ECQ*' role='list item' /&gt;" WaitForReady="COMPLETE">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                      </ui:Target>
                                    </ui:Click.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:Click>
                                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Activate="True" DisplayName="Send Hotkey Enter to 'list item' ECQ" sap:VirtualizedContainerService.HintSize="333.6,154.4" sap2010:WorkflowViewState.IdRef="SendHotkey_21" Key="enter" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                    <ui:SendHotkey.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6ee5381d-d69e-4833-81aa-b70dc553365e" InformativeScreenshot="3717dd555acc3e299eb1f8ea4753767f" Selector="&lt;wnd omit:ctrlid='5003' title='myContainer' /&gt;&lt;wnd omit:ctrlid='1008' /&gt;&lt;ctrl name='*ECQ*' role='list item' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:SendHotkey.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendHotkey>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Delay DisplayName="DelayShort" Duration="[vDateTimeDelayShort]" sap:VirtualizedContainerService.HintSize="794.4,22.4" sap2010:WorkflowViewState.IdRef="Delay_74" />
                          </Sequence>
                        </ActivityAction>
                      </ui:WindowScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:WindowScope>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="241.6,300.8" sap2010:WorkflowViewState.IdRef="Sequence_70">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="12 Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="LogandReport\LogFile.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-BD12</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                          <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                          <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[ArgInConfig(&quot;Generic_ExceptionBody&quot;).ToString.Replace(&quot;ExceptionMessage&quot;,&quot;Unable to load SAP LoginPage. Session time out occured...&quot;)]" Cc="[ArgInConfig(&quot;SupportMailRecipients&quot;).ToString]" DisplayName="17 Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="SendOutlookMail_9" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[ArgInConfig(&quot;Generic_ExceptionSubject&quot;).ToString]" To="[ArgInConfig(&quot;BusinessMailRecipients&quot;).ToString]">
                        <ui:SendOutlookMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                        </ui:SendOutlookMail.Files>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SendOutlookMail>
                      <Throw DisplayName="Throw- Session" Exception="[new BusinessRuleException(&quot;Unable to load SAP LoginPage. Session time out occured...&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_7" />
                    </Sequence>
                  </If.Else>
                </If>
                <ui:UiElementExists DisplayName="Element Exists Multi logon" Exists="[bool_MultipleLogon]" sap:VirtualizedContainerService.HintSize="1155.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_29">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="352ff47e-5688-47e4-9908-bf0403cc0475" InformativeScreenshot="ac77765712391b254809ed2f5a0b7543" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='License Information for Multiple Logons' idx='*' /&gt;" WaitForReady="COMPLETE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:UiElementExists.Target>
                </ui:UiElementExists>
                <If Condition="[bool_MultipleLogon]" DisplayName="If Multiple logon Page exists" sap:VirtualizedContainerService.HintSize="1155.2,52.8" sap2010:WorkflowViewState.IdRef="If_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Continuity Sequence" sap:VirtualizedContainerService.HintSize="375.2,347.2" sap2010:WorkflowViewState.IdRef="Sequence_76">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="1000" DelayMS="1000" DisplayName="Click RadioButton Continue" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_47" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a8a5aa77-92b4-42c3-8283-b72fc7301dae" InformativeScreenshot="dc2e79c97d83142f112e633dcdb0cf46" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='License Information for Multiple Logons' idx='*' /&gt;&lt;sap id='usr/radMULTI_LOGON_OPT1' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:Click SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="1000" DelayMS="1000" DisplayName="Click 'Button Confirm'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_48" KeyModifiers="None" MouseButton="BTN_LEFT">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dd478ca7-4433-4792-b5e3-bf6958591cce" InformativeScreenshot="a50d43b8a6cc7a6458ecb47982483cbc" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='License Information for Multiple Logons' idx='*' /&gt;&lt;sap id='tbar[0]/btn[0]' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_75">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:UiElementExists DisplayName="Element Exists POP Up" Exists="[bool_SAPBackendMessagePopUp]" sap:VirtualizedContainerService.HintSize="1155.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_30">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c5b262d4-2471-4827-8557-0e0d9ed4f4d6" InformativeScreenshot="c1ea0775301dc8a8ac90df1453825c29" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='SAP*' /&gt;&lt;wnd ctrlid='65535' title='*SAP System Message*' /&gt;" WaitForReady="COMPLETE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:UiElementExists.Target>
                </ui:UiElementExists>
                <If Condition="[bool_SAPBackendMessagePopUp]" DisplayName="If back end Pop Up appeared" sap:VirtualizedContainerService.HintSize="1155.2,388.8" sap2010:WorkflowViewState.IdRef="If_30">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,200" sap2010:WorkflowViewState.IdRef="Sequence_77">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Click SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="1000" DelayMS="1000" DisplayName="Click  OK" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_49" KeyModifiers="None" MouseButton="BTN_LEFT">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="39a1cff0-258a-4f09-9a03-ab1ebb4d07ae" InformativeScreenshot="31acfdf7f6b2451f4e03f5bc98384f67" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='SAP GUI for Windows 750' /&gt;&lt;wnd ctrlid='2' title='OK' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_78">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID2" Condition="[ArgInConfig(&quot;BotEnvironment&quot;).ToString.ToLower=&quot;prod&quot;]" DisplayName="Checking if Environment=Prod?" sap:VirtualizedContainerService.HintSize="160,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_8" True="{x:Reference __ReferenceID0}" False="{x:Reference __ReferenceID1}">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">330,276.5</av:Point>
                      <av:Size x:Key="ShapeSize">160,87.2</av:Size>
                      <av:PointCollection x:Key="FalseConnector">490,320.1 680,320.1 680,365.333333333333</av:PointCollection>
                      <av:PointCollection x:Key="TrueConnector">330,320.1 300,320.1 300,519.733333333333 580,519.733333333333</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
            <x:Reference>__ReferenceID2</x:Reference>
          </Flowchart>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="816.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Exception Handling" sap:VirtualizedContainerService.HintSize="480,1034.4" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="438.4,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Warn" Message="[&quot;SAP Login Failure&quot; + exception.Message]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Assign DisplayName="Setting Exception Message" sap:VirtualizedContainerService.HintSize="438.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vStrExceptionMessage]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["SAP Login Failure" + exception.Message]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Incrementing Retry Count" sap:VirtualizedContainerService.HintSize="438.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[vIntRetryCount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[vIntRetryCount+1]</InArgument>
                  </Assign.Value>
                </Assign>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438.666666666667,644" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                  <TryCatch.Variables>
                    <Variable x:TypeArguments="x:String" Name="vStrScreenshotPath" />
                  </TryCatch.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,406" sap2010:WorkflowViewState.IdRef="Sequence_65">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Setting Screenshot Path as Nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vStrScreenshotPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="1 Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="LogandReport\LogFile.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-BD1</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues">["SAP Logon:"+exception.Message+ exception.Source]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                          <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                          <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="ArgInFolder">[ArgInConfig("Box_UiPathScreenshotFolderPath").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ArgInIDSearch">Exception</InArgument>
                          <InOutArgument x:TypeArguments="x:String" x:Key="ArgInOutFilePath">[vStrScreenshotPath]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[exception.Message+exception.Source]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID7" Condition="[vStrExceptionMessage&lt;&gt;nothing]" DisplayName="Exception?" sap:VirtualizedContainerService.HintSize="70.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">265,586.666666666667</av:Point>
              <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
              <av:PointCollection x:Key="TrueConnector">265,630.266666666667 200.2,630.266666666667 200.2,696.666666666667</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">335.4,630.266666666667 365.4,630.266666666667 365.4,630.066666666667 510,630.066666666667</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowDecision x:Name="__ReferenceID6" Condition="[vIntRetryCount&lt;2]" DisplayName="Max Retry?" sap:VirtualizedContainerService.HintSize="70.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">165,696.666666666667</av:Point>
                  <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
                  <av:PointCollection x:Key="TrueConnector">165,740.266666666667 100,740.266666666667 100,594.133333333333</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">235.4,740.266666666667 265.4,740.266666666667 265.4,740 310,740</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,525.333333333333</av:Point>
                      <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">100,525.333333333333 100,350 169,350</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Kill and Login SAP" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:KillProcess Process="{x:Null}" AppliesTo="OnlyCurrentUser" ContinueOnError="True" DisplayName="Kill Process- SAP" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="saplogon" />
                    <Delay DisplayName="DelayShort" Duration="[ArgInTmeSpanDelayShort]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Delay_43" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Retry count is &quot;+vIntRetryCount.ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">169,320</av:Point>
                          <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300.2,380 300.2,410 300,410 300,444.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Initializing Exception Message" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vStrExceptionMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <FlowStep.Next>
                        <x:Reference>__ReferenceID4</x:Reference>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">310,713.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">410,766.4 410,868.8</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[ArgInConfig(&quot;Generic_ExceptionBody&quot;).ToString.Replace(&quot;ExceptionMessage&quot;,&quot;Bot is unable to complete SAP Login.Please Check...&quot;)]" Cc="[ArgInConfig(&quot;SupportMailRecipients&quot;).ToString]" DisplayName="19 Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="SendOutlookMail_7" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[ArgInConfig(&quot;Generic_ExceptionSubject&quot;).ToString]" To="[ArgInConfig(&quot;BusinessMailRecipients&quot;).ToString]">
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                    </ui:SendOutlookMail.Files>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:SendOutlookMail>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">310,868.8</av:Point>
                          <av:Size x:Key="ShapeSize">200,22.4</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Throw DisplayName="Throw SAP Login" Exception="[new BusinessRuleException(&quot;SAP Login Failed&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Throw>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">510,603.666666666667</av:Point>
                  <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot; SAP Login Sucessfull-1&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">169,210</av:Point>
          <av:Size x:Key="ShapeSize">262.4,60</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300.2,270 300.2,320</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Initializing Retry Count" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[vIntRetryCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <FlowStep.Next>
        <x:Reference>__ReferenceID5</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <FlowStep x:Name="__ReferenceID13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,114.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,167.3 300,197.3 300.2,197.3 300.2,210</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="LogandReport\LogFile.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-BD10</InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
          <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
          <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
          <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
          <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <FlowStep.Next>
        <x:Reference>__ReferenceID12</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>